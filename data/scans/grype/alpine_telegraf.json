{
 "matches": [
  {
   "vulnerability": {
    "id": "GHSA-4374-p667-p6c8",
    "dataSource": "https://github.com/advisories/GHSA-4374-p667-p6c8",
    "namespace": "github:language:go",
    "severity": "Medium",
    "urls": [
     "https://github.com/advisories/GHSA-4374-p667-p6c8"
    ],
    "description": "HTTP/2 rapid reset can cause excessive work in net/http",
    "cvss": [],
    "fix": {
     "versions": [
      "0.17.0"
     ],
     "state": "fixed"
    },
    "advisories": []
   },
   "relatedVulnerabilities": [
    {
     "id": "CVE-2023-39325",
     "dataSource": "https://nvd.nist.gov/vuln/detail/CVE-2023-39325",
     "namespace": "nvd:cpe",
     "urls": [
      "https://go.dev/cl/534215",
      "https://go.dev/cl/534235",
      "https://go.dev/issue/63417",
      "https://groups.google.com/g/golang-announce/c/iNNxDTCjZvo/m/UDd7VKQuAAAJ",
      "https://pkg.go.dev/vuln/GO-2023-2102"
     ],
     "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
     "cvss": []
    }
   ],
   "matchDetails": [
    {
     "type": "exact-direct-match",
     "matcher": "go-module-matcher",
     "searchedBy": {
      "language": "go",
      "namespace": "github:language:go",
      "package": {
       "name": "golang.org/x/net",
       "version": "v0.15.0"
      }
     },
     "found": {
      "versionConstraint": "<0.17.0 (unknown)",
      "vulnerabilityID": "GHSA-4374-p667-p6c8"
     }
    }
   ],
   "artifact": {
    "id": "400462a9ba58302a",
    "name": "golang.org/x/net",
    "version": "v0.15.0",
    "type": "go-module",
    "locations": [
     {
      "path": "/usr/bin/telegraf",
      "layerID": "sha256:2a30b0419c03aadf7ba54200ed9993593b13278f845bb547dc93165796e607c5"
     }
    ],
    "language": "go",
    "licenses": [],
    "cpes": [
     "cpe:2.3:a:golang:x/net:v0.15.0:*:*:*:*:*:*:*"
    ],
    "purl": "pkg:golang/golang.org/x/net@v0.15.0",
    "upstreams": [],
    "metadataType": "GolangBinMetadata",
    "metadata": {
     "goCompiledVersion": "go1.21.1",
     "architecture": "amd64",
     "h1Digest": "h1:ugBLEUaxABaB5AJqW9enI0ACdci2RUd4eP51NTBvuJ8=",
     "mainModule": "github.com/influxdata/telegraf"
    }
   }
  }
 ],
 "source": {
  "type": "image",
  "target": {
   "userInput": "docker.io/telegraf:alpine",
   "imageID": "sha256:c9e8de638799c6d831fb35bfa225b6685a5987ab5a9c84ac9e280610841b9e74",
   "manifestDigest": "sha256:fbd2440dab6a5d21220bc696c9cb741eafc1ea2069188bf4c50382b987a0d3b6",
   "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
   "tags": [
    "telegraf:alpine"
   ],
   "imageSize": 218334914,
   "layers": [
    {
     "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
     "digest": "sha256:cc2447e1835a40530975ab80bb1f872fbab0f2a0faecf2ab16fbbb89b3589438",
     "size": 7330497
    },
    {
     "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
     "digest": "sha256:ed6b4db053f6619a69cd4cd5f447538b743a437a497dd32f775dff8d6571b384",
     "size": 222
    },
    {
     "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
     "digest": "sha256:1ec672c1d5ad2e103414798115d3697c9da6636d6c12e14141bbdb3d0856968e",
     "size": 7874948
    },
    {
     "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
     "digest": "sha256:2a30b0419c03aadf7ba54200ed9993593b13278f845bb547dc93165796e607c5",
     "size": 203128882
    },
    {
     "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
     "digest": "sha256:889bcdbd0880a8686124ad6b4d7c79e7238c7b5e7391cfecfb879c121ed72125",
     "size": 365
    }
   ],
   "manifest": "eyJzY2hlbWFWZXJzaW9uIjoyLCJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmRpc3RyaWJ1dGlvbi5tYW5pZmVzdC52Mitqc29uIiwiY29uZmlnIjp7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuY29udGFpbmVyLmltYWdlLnYxK2pzb24iLCJzaXplIjo0NjExLCJkaWdlc3QiOiJzaGEyNTY6YzllOGRlNjM4Nzk5YzZkODMxZmIzNWJmYTIyNWI2Njg1YTU5ODdhYjVhOWM4NGFjOWUyODA2MTA4NDFiOWU3NCJ9LCJsYXllcnMiOlt7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjo3NjI1NzI4LCJkaWdlc3QiOiJzaGEyNTY6Y2MyNDQ3ZTE4MzVhNDA1MzA5NzVhYjgwYmIxZjg3MmZiYWIwZjJhMGZhZWNmMmFiMTZmYmJiODliMzU4OTQzOCJ9LHsibWVkaWFUeXBlIjoiYXBwbGljYXRpb24vdm5kLmRvY2tlci5pbWFnZS5yb290ZnMuZGlmZi50YXIuZ3ppcCIsInNpemUiOjI1NjAsImRpZ2VzdCI6InNoYTI1NjplZDZiNGRiMDUzZjY2MTlhNjljZDRjZDVmNDQ3NTM4Yjc0M2E0MzdhNDk3ZGQzMmY3NzVkZmY4ZDY1NzFiMzg0In0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6OTExODcyMCwiZGlnZXN0Ijoic2hhMjU2OjFlYzY3MmMxZDVhZDJlMTAzNDE0Nzk4MTE1ZDM2OTdjOWRhNjYzNmQ2YzEyZTE0MTQxYmJkYjNkMDg1Njk2OGUifSx7Im1lZGlhVHlwZSI6ImFwcGxpY2F0aW9uL3ZuZC5kb2NrZXIuaW1hZ2Uucm9vdGZzLmRpZmYudGFyLmd6aXAiLCJzaXplIjoyMDMxNTA4NDgsImRpZ2VzdCI6InNoYTI1NjoyYTMwYjA0MTljMDNhYWRmN2JhNTQyMDBlZDk5OTM1OTNiMTMyNzhmODQ1YmI1NDdkYzkzMTY1Nzk2ZTYwN2M1In0seyJtZWRpYVR5cGUiOiJhcHBsaWNhdGlvbi92bmQuZG9ja2VyLmltYWdlLnJvb3Rmcy5kaWZmLnRhci5nemlwIiwic2l6ZSI6MjA0OCwiZGlnZXN0Ijoic2hhMjU2Ojg4OWJjZGJkMDg4MGE4Njg2MTI0YWQ2YjRkN2M3OWU3MjM4YzdiNWU3MzkxY2ZlY2ZiODc5YzEyMWVkNzIxMjUifV19",
   "config": "eyJhcmNoaXRlY3R1cmUiOiJhbWQ2NCIsImNvbmZpZyI6eyJIb3N0bmFtZSI6IiIsIkRvbWFpbm5hbWUiOiIiLCJVc2VyIjoiIiwiQXR0YWNoU3RkaW4iOmZhbHNlLCJBdHRhY2hTdGRvdXQiOmZhbHNlLCJBdHRhY2hTdGRlcnIiOmZhbHNlLCJFeHBvc2VkUG9ydHMiOnsiODA5Mi91ZHAiOnt9LCI4MDk0L3RjcCI6e30sIjgxMjUvdWRwIjp7fX0sIlR0eSI6ZmFsc2UsIk9wZW5TdGRpbiI6ZmFsc2UsIlN0ZGluT25jZSI6ZmFsc2UsIkVudiI6WyJQQVRIPS91c3IvbG9jYWwvc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL3NiaW46L3Vzci9iaW46L3NiaW46L2JpbiIsIlRFTEVHUkFGX1ZFUlNJT049MS4yOC4yIl0sIkNtZCI6WyJ0ZWxlZ3JhZiJdLCJJbWFnZSI6InNoYTI1NjoxZTUxZDc0NTE0MjFiOTExODQ0OWEzMTU2MTk4MjNlZjI2NDNlYWM4NTljZjEyYTU2ZTIyM2U4NWYwZTQ1MDU0IiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOlsiL2VudHJ5cG9pbnQuc2giXSwiT25CdWlsZCI6bnVsbCwiTGFiZWxzIjpudWxsfSwiY29udGFpbmVyIjoiNTVhNTI1YWY3YzE0MjM4MDc4MWY5ODBmZTdmMzNkODU5ZGE1NzY3MTZhNGRlOGZkYmUwMzBkNjgxNWZjNzRhNiIsImNvbnRhaW5lcl9jb25maWciOnsiSG9zdG5hbWUiOiI1NWE1MjVhZjdjMTQiLCJEb21haW5uYW1lIjoiIiwiVXNlciI6IiIsIkF0dGFjaFN0ZGluIjpmYWxzZSwiQXR0YWNoU3Rkb3V0IjpmYWxzZSwiQXR0YWNoU3RkZXJyIjpmYWxzZSwiRXhwb3NlZFBvcnRzIjp7IjgwOTIvdWRwIjp7fSwiODA5NC90Y3AiOnt9LCI4MTI1L3VkcCI6e319LCJUdHkiOmZhbHNlLCJPcGVuU3RkaW4iOmZhbHNlLCJTdGRpbk9uY2UiOmZhbHNlLCJFbnYiOlsiUEFUSD0vdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW46L3Vzci9zYmluOi91c3IvYmluOi9zYmluOi9iaW4iLCJURUxFR1JBRl9WRVJTSU9OPTEuMjguMiJdLCJDbWQiOlsiL2Jpbi9zaCIsIi1jIiwiIyhub3ApICIsIkNNRCBbXCJ0ZWxlZ3JhZlwiXSJdLCJJbWFnZSI6InNoYTI1NjoxZTUxZDc0NTE0MjFiOTExODQ0OWEzMTU2MTk4MjNlZjI2NDNlYWM4NTljZjEyYTU2ZTIyM2U4NWYwZTQ1MDU0IiwiVm9sdW1lcyI6bnVsbCwiV29ya2luZ0RpciI6IiIsIkVudHJ5cG9pbnQiOlsiL2VudHJ5cG9pbnQuc2giXSwiT25CdWlsZCI6bnVsbCwiTGFiZWxzIjp7fX0sImNyZWF0ZWQiOiIyMDIzLTEwLTAzVDA0OjA1OjA2LjcyMjg3NDA5NVoiLCJkb2NrZXJfdmVyc2lvbiI6IjIwLjEwLjIzIiwiaGlzdG9yeSI6W3siY3JlYXRlZCI6IjIwMjMtMDktMjhUMjE6MTk6MjcuNjg2MTEwMDYzWiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSBBREQgZmlsZTo3NTYxODNiYmE5YzdmNDU5M2MyYjIxNmU5OGU0MjA4YjkxNjNjNGM5NjJlYTA4MzdlZjg4YmQ5MTc2MDlkMDAxIGluIC8gIn0seyJjcmVhdGVkIjoiMjAyMy0wOS0yOFQyMToxOToyNy44MDE0Nzk0MDlaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApICBDTUQgW1wiL2Jpbi9zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIzLTA5LTI4VDIzOjIyOjEwLjE2MjAyMzU3OFoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyBlY2hvICdob3N0czogZmlsZXMgZG5zJyBcdTAwM2VcdTAwM2UgL2V0Yy9uc3N3aXRjaC5jb25mIn0seyJjcmVhdGVkIjoiMjAyMy0wOS0yOVQwMzoyNToyMi40MjA0Nzk0MTZaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgYXBrIGFkZCAtLW5vLWNhY2hlIGlwdXRpbHMgY2EtY2VydGlmaWNhdGVzIG5ldC1zbm1wLXRvb2xzIHByb2NwcyBsbV9zZW5zb3JzIHR6ZGF0YSBzdS1leGVjIGxpYmNhcCBcdTAwMjZcdTAwMjYgICAgIHVwZGF0ZS1jYS1jZXJ0aWZpY2F0ZXMifSx7ImNyZWF0ZWQiOiIyMDIzLTEwLTAzVDA0OjA0OjU5LjU3NzU5OTg3NloiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgIEVOViBURUxFR1JBRl9WRVJTSU9OPTEuMjguMiIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIzLTEwLTAzVDA0OjA1OjA2LjA2MTQwOTM5WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jIEFSQ0g9IFx1MDAyNlx1MDAyNiAgICAgY2FzZSBcIiQoYXBrIC0tcHJpbnQtYXJjaClcIiBpbiAgICAgICAgIHg4Nl82NCkgQVJDSD0nYW1kNjQnOzsgICAgICAgICBhYXJjaDY0KSBBUkNIPSdhcm02NCc7OyAgICAgICAgICopIGVjaG8gXCJVbnN1cHBvcnRlZCBhcmNoaXRlY3R1cmU6ICQoYXBrIC0tcHJpbnQtYXJjaClcIjsgZXhpdCAxOzsgICAgIGVzYWMgXHUwMDI2XHUwMDI2ICAgICBzZXQgLWV4IFx1MDAyNlx1MDAyNiAgICAgbWtkaXIgfi8uZ251cGc7ICAgICBlY2hvIFwiZGlzYWJsZS1pcHY2XCIgXHUwMDNlXHUwMDNlIH4vLmdudXBnL2Rpcm1uZ3IuY29uZjsgICAgIGFwayBhZGQgLS1uby1jYWNoZSAtLXZpcnR1YWwgLmJ1aWxkLWRlcHMgd2dldCBnbnVwZyB0YXIgXHUwMDI2XHUwMDI2ICAgICBmb3Iga2V5IGluICAgICAgICAgOUQ1MzlEOTBEMzMyOERDN0Q2QzhEM0I5RDhGRjhFMUY3REY4QjA3RSA7ICAgICBkbyAgICAgICAgIGdwZyAtLWtleXNlcnZlciBoa3A6Ly9rZXlzZXJ2ZXIudWJ1bnR1LmNvbSAtLXJlY3Yta2V5cyBcIiRrZXlcIiA7ICAgICBkb25lIFx1MDAyNlx1MDAyNiAgICAgd2dldCAtLW5vLXZlcmJvc2UgaHR0cHM6Ly9kbC5pbmZsdXhkYXRhLmNvbS90ZWxlZ3JhZi9yZWxlYXNlcy90ZWxlZ3JhZi0ke1RFTEVHUkFGX1ZFUlNJT059X2xpbnV4XyR7QVJDSH0udGFyLmd6LmFzYyBcdTAwMjZcdTAwMjYgICAgIHdnZXQgLS1uby12ZXJib3NlIGh0dHBzOi8vZGwuaW5mbHV4ZGF0YS5jb20vdGVsZWdyYWYvcmVsZWFzZXMvdGVsZWdyYWYtJHtURUxFR1JBRl9WRVJTSU9OfV9saW51eF8ke0FSQ0h9LnRhci5neiBcdTAwMjZcdTAwMjYgICAgIGdwZyAtLWJhdGNoIC0tdmVyaWZ5IHRlbGVncmFmLSR7VEVMRUdSQUZfVkVSU0lPTn1fbGludXhfJHtBUkNIfS50YXIuZ3ouYXNjIHRlbGVncmFmLSR7VEVMRUdSQUZfVkVSU0lPTn1fbGludXhfJHtBUkNIfS50YXIuZ3ogXHUwMDI2XHUwMDI2ICAgICBta2RpciAtcCAvdXNyL3NyYyAvZXRjL3RlbGVncmFmIFx1MDAyNlx1MDAyNiAgICAgdGFyIC1DIC91c3Ivc3JjIC14emYgdGVsZWdyYWYtJHtURUxFR1JBRl9WRVJTSU9OfV9saW51eF8ke0FSQ0h9LnRhci5neiBcdTAwMjZcdTAwMjYgICAgIG12IC91c3Ivc3JjL3RlbGVncmFmKi9ldGMvdGVsZWdyYWYvdGVsZWdyYWYuY29uZiAvZXRjL3RlbGVncmFmLyBcdTAwMjZcdTAwMjYgICAgIG1rZGlyIC9ldGMvdGVsZWdyYWYvdGVsZWdyYWYuZCBcdTAwMjZcdTAwMjYgICAgIGNwIC1hIC91c3Ivc3JjL3RlbGVncmFmKi91c3IvYmluL3RlbGVncmFmIC91c3IvYmluLyBcdTAwMjZcdTAwMjYgICAgIGdwZ2NvbmYgLS1raWxsIGFsbCBcdTAwMjZcdTAwMjYgICAgIHJtIC1yZiAqLnRhci5neiogL3Vzci9zcmMgL3Jvb3QvLmdudXBnIFx1MDAyNlx1MDAyNiAgICAgYXBrIGRlbCAuYnVpbGQtZGVwcyBcdTAwMjZcdTAwMjYgICAgIGFkZGdyb3VwIC1TIHRlbGVncmFmIFx1MDAyNlx1MDAyNiAgICAgYWRkdXNlciAtUyB0ZWxlZ3JhZiAtRyB0ZWxlZ3JhZiBcdTAwMjZcdTAwMjYgICAgIGNob3duIC1SIHRlbGVncmFmOnRlbGVncmFmIC9ldGMvdGVsZWdyYWYifSx7ImNyZWF0ZWQiOiIyMDIzLTEwLTAzVDA0OjA1OjA2LjQ1OTkwNzk3WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgRVhQT1NFIDgwOTIvdWRwIDgwOTQgODEyNS91ZHAiLCJlbXB0eV9sYXllciI6dHJ1ZX0seyJjcmVhdGVkIjoiMjAyMy0xMC0wM1QwNDowNTowNi41NTE3MTg5NTdaIiwiY3JlYXRlZF9ieSI6Ii9iaW4vc2ggLWMgIyhub3ApIENPUFkgZmlsZTpmNDFjYjY0MTI5ZTAzYzQ2NTIzYzNhY2QyZGE3NzM3NmE2OGQ5Nzg1ZDc3NWZhZjBkMzU5MDUxYzIwYjRmMWJmIGluIC9lbnRyeXBvaW50LnNoICJ9LHsiY3JlYXRlZCI6IjIwMjMtMTAtMDNUMDQ6MDU6MDYuNjM1MjUyODA5WiIsImNyZWF0ZWRfYnkiOiIvYmluL3NoIC1jICMobm9wKSAgRU5UUllQT0lOVCBbXCIvZW50cnlwb2ludC5zaFwiXSIsImVtcHR5X2xheWVyIjp0cnVlfSx7ImNyZWF0ZWQiOiIyMDIzLTEwLTAzVDA0OjA1OjA2LjcyMjg3NDA5NVoiLCJjcmVhdGVkX2J5IjoiL2Jpbi9zaCAtYyAjKG5vcCkgIENNRCBbXCJ0ZWxlZ3JhZlwiXSIsImVtcHR5X2xheWVyIjp0cnVlfV0sIm9zIjoibGludXgiLCJyb290ZnMiOnsidHlwZSI6ImxheWVycyIsImRpZmZfaWRzIjpbInNoYTI1NjpjYzI0NDdlMTgzNWE0MDUzMDk3NWFiODBiYjFmODcyZmJhYjBmMmEwZmFlY2YyYWIxNmZiYmI4OWIzNTg5NDM4Iiwic2hhMjU2OmVkNmI0ZGIwNTNmNjYxOWE2OWNkNGNkNWY0NDc1MzhiNzQzYTQzN2E0OTdkZDMyZjc3NWRmZjhkNjU3MWIzODQiLCJzaGEyNTY6MWVjNjcyYzFkNWFkMmUxMDM0MTQ3OTgxMTVkMzY5N2M5ZGE2NjM2ZDZjMTJlMTQxNDFiYmRiM2QwODU2OTY4ZSIsInNoYTI1NjoyYTMwYjA0MTljMDNhYWRmN2JhNTQyMDBlZDk5OTM1OTNiMTMyNzhmODQ1YmI1NDdkYzkzMTY1Nzk2ZTYwN2M1Iiwic2hhMjU2Ojg4OWJjZGJkMDg4MGE4Njg2MTI0YWQ2YjRkN2M3OWU3MjM4YzdiNWU3MzkxY2ZlY2ZiODc5YzEyMWVkNzIxMjUiXX19",
   "repoDigests": [
    "telegraf@sha256:8ca038c7af92a0469bd607b576e6adbde702cb5f50152e6eb14d3fc9143884e5"
   ],
   "architecture": "amd64",
   "os": "linux"
  }
 },
 "distro": {
  "name": "alpine",
  "version": "3.18.4",
  "idLike": []
 },
 "descriptor": {
  "name": "grype",
  "version": "0.71.0",
  "configuration": {
   "output": [
    "json"
   ],
   "file": "",
   "distro": "",
   "add-cpes-if-none": false,
   "output-template-file": "",
   "check-for-app-update": true,
   "only-fixed": false,
   "only-notfixed": false,
   "platform": "",
   "search": {
    "scope": "Squashed",
    "unindexed-archives": false,
    "indexed-archives": true
   },
   "ignore": null,
   "exclude": [],
   "db": {
    "cache-dir": "/home/anon/.cache/grype/db",
    "update-url": "https://toolbox-data.anchore.io/grype/databases/listing.json",
    "ca-cert": "",
    "auto-update": true,
    "validate-by-hash-on-start": false,
    "validate-age": true,
    "max-allowed-built-age": 432000000000000
   },
   "externalSources": {
    "enable": false,
    "maven": {
     "searchUpstreamBySha1": true,
     "baseUrl": "https://search.maven.org/solrsearch/select"
    }
   },
   "match": {
    "java": {
     "using-cpes": false
    },
    "dotnet": {
     "using-cpes": false
    },
    "golang": {
     "using-cpes": false
    },
    "javascript": {
     "using-cpes": false
    },
    "python": {
     "using-cpes": false
    },
    "ruby": {
     "using-cpes": false
    },
    "rust": {
     "using-cpes": false
    },
    "stock": {
     "using-cpes": true
    }
   },
   "fail-on-severity": "",
   "registry": {
    "insecure-skip-tls-verify": false,
    "insecure-use-http": false,
    "auth": null,
    "ca-cert": ""
   },
   "show-suppressed": false,
   "by-cve": false,
   "name": "",
   "default-image-pull-source": "",
   "vex-documents": [],
   "vex-add": []
  },
  "db": {
   "built": "2023-10-13T01:25:27Z",
   "schemaVersion": 5,
   "location": "/home/anon/.cache/grype/db/5",
   "checksum": "sha256:b4a890ba7a0e7dd7336493427223a1fbf8b4c0b45f972ae68dcd61106667f31b",
   "error": null
  },
  "timestamp": "2023-10-13T11:53:01.03570473-04:00"
 }
}
